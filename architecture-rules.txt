BUGS
	1 [collectionService] All the collection stores should update with the correct path when teh cacheDirectory is changed in config

Supported Solution Features
	1. Automatically defaults to using a self signed certificate if one is not provided
	2. Disables TLS 1.0 and 1.1 by default
	3. AccessControls for application mount point and application route
	4. Several authentication strategies
	5. Uses redis for sessions and mongoDB for Stores
	6. Clustering and Redundancy (multicore use)
	7. Data transfer service with encryption and compression (Replace Tectia)
	8. Advance Monitoring capabilities (servers, diskspace, events, etc)
	9. Team task/project manager
	10. Run remote SQL Server queries over encrypted channel (accessControls include by IP address)
	11. DataCollectionService that includes allowOnDemand (passthrough query, not cached data)
	12. Add autoStart function to start collections on reboot
	13. Testing tool (ask question and checkboxes and multiple choice)
	14. For monitoring - Ability to say check condition later like alert if the issue continues more 2 hours exmpl.
	15. control access by IP
	16. Use sha value testing of files for changes
	17. API service discovery route i.e. /api/service-list or /api/info
	18. Add component and service to send emails through application 
	19: hpsm-incidents -add link on table to open directly in hpsm
	20: make hpsm-incidents dup detection on/off option and select fields to compare for dup
	21: collection-service add capability to trigger event based on string match
	22. collection capability to set collection to blocked so nobody can read it
	23. allow collection-service to save queries for future use
	
Models:
	1. Can only be accessed through a service
	2. More than one model can belong to the same service
	3. A model can only belong to one service
	4. Models are responsible for data persistence
	5. Rely on service to perform parameter validation
	6. Responsible for store schema
	7. Stores can only be accessed through a model
	8. Do not perform logging, instead throw error for service to catch and log
	9. Return a copy of the data and not a reference

Services:
	1. Can only access models owned by the service
	2. Can call other services
	2. Responsible for validating parameters before calling a model method
	3. Use curried or revealing module patterns
	4. Responsible for performing logging at the service level and catching and logging errors propagated from the model
	5. Return a copy of the data and not a reference
	6. Getter methods do not return errors, they only return requested data or undefined
	7. Clone parameters to ensure that object references are not accidentally modified outside of function
	8. When using the serviceAccountService, services are responsible for defining the schema (properties) for the service account
	9. Explicitly defined functions are private and being so, do not need to perform parameter validation but objects must still be cloned

Controllers:
	1. Handle request and response objects
	2. Always logs the remoteAddress along with the log message
	3. Extracts the necessary variables from the request to feed into a service call
	4. Responsible for mapping service error messages to HTTP error codes
	4. Responsible for setting HTTP response code, reason phrase and message
	5. Responsible for call one or more services to satisfy request
	6. translates caught service thrown error messages to meaningful user message in res.statusMessage

Routes:
	1. Responsible for defining all possible routes
	2. Call controllers

Schema:
	1. Sets default values
	2. Validate data types and apply constraints

Error Messages:
	1. Error messages that are meaningful to a larger audience
	2. Avoid superfluous error messages

TODOS:
	1. toolboxService.saveStoreToFile should have a sync and async option. Use sync on intializing, async otherwise
	2. hpsmIncidentsStore needs unique identifier for each environment